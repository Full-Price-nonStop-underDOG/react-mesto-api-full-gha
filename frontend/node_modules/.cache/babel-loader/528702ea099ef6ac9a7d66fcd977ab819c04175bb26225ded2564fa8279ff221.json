{"ast":null,"code":"var _jsxFileName = \"/Users/bogdanus/mesto-react/src/components/AddPlacePopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPlacePopup(props) {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  function handleNewNameChange(event) {\n    setName(event.target.value);\n  }\n  function handleNewLinkChange(event) {\n    setLink(event.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    // Проверяем, что все поля заполнены\n    if (!name || !link) {\n      setError(\"Пожалуйста, заполните все поля\");\n      return;\n    }\n    props.onAddPlace({\n      name,\n      link\n    });\n  }\n  useEffect(() => {\n    if (!props.isOpen) {\n      setName(\"\");\n      setLink(\"\");\n      setError(\"\");\n    }\n  }, [props.isOpen]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    name: \"new-card\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    textButton: props.isLoading ? \"Добавление...\" : \"Добавить\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      minLength: \"4\",\n      maxLength: \"200\",\n      className: \"form__field form__text\",\n      id: \"form__field-card-text\",\n      name: \"name\",\n      value: name,\n      onChange: handleNewNameChange,\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"url\",\n      className: \"form__field form__text\",\n      id: \"form__field-card-image\",\n      name: \"link\",\n      value: link,\n      onChange: handleNewLinkChange,\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPlacePopup, \"tGxSzkegyjBhTQpPpUe1y7MIn78=\");\n_c = AddPlacePopup;\nexport default AddPlacePopup;\nvar _c;\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"names":["React","useState","useEffect","PopupWithForm","jsxDEV","_jsxDEV","AddPlacePopup","props","_s","name","setName","link","setLink","error","setError","handleNewNameChange","event","target","value","handleNewLinkChange","handleSubmit","e","preventDefault","onAddPlace","isOpen","title","onClose","onSubmit","textButton","isLoading","children","className","fileName","_jsxFileName","lineNumber","columnNumber","minLength","maxLength","id","onChange","placeholder","required","type","_c","$RefreshReg$"],"sources":["/Users/bogdanus/mesto-react/src/components/AddPlacePopup.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup(props) {\n  const [name, setName] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  function handleNewNameChange(event) {\n    setName(event.target.value);\n  }\n\n  function handleNewLinkChange(event) {\n    setLink(event.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    // Проверяем, что все поля заполнены\n    if (!name || !link) {\n      setError(\"Пожалуйста, заполните все поля\");\n      return;\n    }\n\n    props.onAddPlace({\n      name,\n      link,\n    });\n  }\n\n  useEffect(() => {\n    if (!props.isOpen) {\n      setName(\"\");\n      setLink(\"\");\n      setError(\"\");\n    }\n  }, [props.isOpen]);\n\n  return (\n    <PopupWithForm\n      title=\"Новое место\"\n      name=\"new-card\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      textButton={props.isLoading ? \"Добавление...\" : \"Добавить\"}\n    >\n      {error && <span className=\"error-message\">{error}</span>}\n      <input\n        minLength=\"4\"\n        maxLength=\"200\"\n        className=\"form__field form__text\"\n        id=\"form__field-card-text\"\n        name=\"name\"\n        value={name}\n        onChange={handleNewNameChange}\n        placeholder=\"Название\"\n        required\n      />\n      <input\n        type=\"url\"\n        className=\"form__field form__text\"\n        id=\"form__field-card-image\"\n        name=\"link\"\n        value={link}\n        onChange={handleNewLinkChange}\n        placeholder=\"Ссылка на картинку\"\n        required\n      />\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}