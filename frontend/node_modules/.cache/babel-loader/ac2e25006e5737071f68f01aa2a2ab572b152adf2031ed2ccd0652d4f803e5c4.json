{"ast":null,"code":"var _jsxFileName = \"/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { BrowserRouter, Routes, Route, navigate, Navigate, useNavigate } from \"react-router-dom\";\nimport Header from \"../components/Header.js\";\nimport Main from \"../components/Main.js\";\nimport Footer from \"../components/Footer.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport api from \"../utils/Api.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport Register from \"./Register.js\";\nimport ProtectedRouteElement from \"./ProtectedRoute.js\";\nimport Login from \"./Login.js\";\nimport authenticationApi from \"../utils/AuthenticationApi.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  const [email, setEmail] = React.useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  useEffect(() => {\n    setIsLoading(true); // Устанавливаем состояние загрузки в true перед отправкой запроса\n    Promise.all([api.getUserInfo(), api.getInitialCardsData()]).then(_ref => {\n      let [userData, cardsData] = _ref;\n      setCurrentUser(userData);\n      setCards(cardsData);\n      setIsLoading(false); // Устанавливаем состояние загрузки в false после получения данных\n    }).catch(error => {\n      console.log(error);\n      setIsLoading(false); // Устанавливаем состояние загрузки в false в случае ошибки\n    });\n  }, []);\n  React.useEffect(() => {\n    const checkToken = async () => {\n      const jwt = localStorage.getItem(\"jwt\");\n      if (jwt) {\n        try {\n          const res = await AuthApi.checkToken(jwt);\n          setIsLoggedIn(true);\n          setEmail(res.data.email);\n          navigate(\"/\", {\n            replace: true\n          });\n        } catch (err) {\n          if (err.status === 401) {\n            console.log(\"401 — токен не передан\");\n          }\n          console.log(\"401 — токен некорректен\");\n        }\n      }\n    };\n    checkToken();\n  }, [navigate]);\n  function handleSignOut() {\n    localStorage.removeItem(\"jwt\");\n    setIsLoggedIn(false);\n    navigate(\"/sign-in\", {\n      replace: true\n    });\n  }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    if (isLiked) {\n      api.removeLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(error => {\n        // Обработка ошибки при удалении лайка\n        console.error(\"Error removing like:\", error);\n      });\n    } else {\n      api.addLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(error => {\n        // Обработка ошибки при добавлении лайка\n        console.error(\"Error adding like:\", error);\n      });\n    }\n  }\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(error => {\n      console.log(\"Ошибка при удалении карточки:\", error);\n    });\n  }\n  function handleUpdateUser(userData) {\n    setIsLoading(true); // Устанавливаем состояние загрузки в true перед отправкой запроса\n    api.editProfileInfo(userData).then(updatedUser => {\n      setCurrentUser(updatedUser);\n      closeAllPopups();\n      setIsLoading(false); // Устанавливаем состояние загрузки в false после получения ответа\n    }).catch(error => {\n      console.log(error);\n      setIsLoading(false); // Устанавливаем состояние загрузки в false в случае ошибки\n    });\n  }\n\n  function handleUpdateAvatar(newAvatar) {\n    setIsLoading(true); // Устанавливаем состояние загрузки в true перед отправкой запроса\n    api.updateProfileUserAvatar(newAvatar).then(updatedUser => {\n      setCurrentUser(updatedUser);\n      closeAllPopups();\n      setIsLoading(false); // Устанавливаем состояние загрузки в false после получения ответа\n    }).catch(error => {\n      console.log(error);\n      setIsLoading(false); // Устанавливаем состояние загрузки в false в случае ошибки\n    });\n  }\n\n  function handleAddPlaceSubmit(newCard, setError) {\n    setIsLoading(true); // Set loading state to true before sending the request\n    api.addNewCard(newCard).then(addedCard => {\n      setCards([addedCard, ...cards]);\n      closeAllPopups();\n      setIsLoading(false); // Set loading state to false after receiving the response\n    }).catch(error => {\n      console.log(\"Error adding card:\", error);\n      setError(\"Имя карточки слишком длинное.\"); // Set the error message\n      setIsLoading(false); // Set loading state to false in case of an error\n    });\n  }\n\n  const handleEditAvatarClick = event => {\n    setEditAvatarPopupOpen(true);\n  };\n  const handleEditProfileClick = event => {\n    setEditProfilePopupOpen(true);\n  };\n  const handleAddPlaceClick = event => {\n    setAddPlacePopupOpen(true);\n  };\n  const closeAllPopups = event => {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  };\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n  useEffect(() => {\n    api.getUserInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  useEffect(() => {\n    api.getInitialCardsData().then(data => {\n      setCards(data);\n    }).catch(error => {\n      console.log(\"Ошибка при загрузке карточек:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser || \"\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          email: email,\n          onSignOut: handleSignOut,\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: isLoggedIn ? /*#__PURE__*/_jsxDEV(ProtectedRouteElement, {\n              element: Main,\n              isLoggedIn: isLoggedIn,\n              onEditAvatar: handleEditAvatarClick,\n              onEditProfile: handleEditProfileClick,\n              onAddPlace: handleAddPlaceClick,\n              cards: cards,\n              onCardClick: handleCardClick,\n              CurrentUserContext: currentUser,\n              handleCardLike: handleCardLike,\n              onCardDelete: handleCardDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"sign-in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup popup_type_confirmation\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"popup__close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"popup__form\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"popup__title\",\n              children: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"popup__submit\",\n              children: \"\\u0414\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), selectedCard && /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2Yo+YnW/IPcxJPAx0ahJsFiNVMo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useContext","BrowserRouter","Routes","Route","navigate","Navigate","useNavigate","Header","Main","Footer","PopupWithForm","api","ImagePopup","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Register","ProtectedRouteElement","Login","authenticationApi","jsxDEV","_jsxDEV","App","_s","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isLoading","setIsLoading","isLoggedIn","setIsLoggedIn","email","setEmail","cards","setCards","selectedCard","setSelectedCard","currentUser","setCurrentUser","Promise","all","getUserInfo","getInitialCardsData","then","_ref","userData","cardsData","catch","error","console","log","checkToken","jwt","localStorage","getItem","res","AuthApi","data","replace","err","status","handleSignOut","removeItem","handleCardLike","card","isLiked","likes","some","i","_id","removeLike","newCard","state","map","c","addLike","handleCardDelete","removeCard","filter","handleUpdateUser","editProfileInfo","updatedUser","closeAllPopups","handleUpdateAvatar","newAvatar","updateProfileUserAvatar","handleAddPlaceSubmit","setError","addNewCard","addedCard","handleEditAvatarClick","event","handleEditProfileClick","handleAddPlaceClick","handleCardClick","Provider","value","children","className","onSignOut","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onEditAvatar","onEditProfile","onAddPlace","onCardClick","onCardDelete","to","isOpen","onClose","onUpdateUser","type","onUpdateAvatar","_c","$RefreshReg$"],"sources":["/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  navigate,\n  Navigate,\n  useNavigate,\n} from \"react-router-dom\";\nimport Header from \"../components/Header.js\";\nimport Main from \"../components/Main.js\";\nimport Footer from \"../components/Footer.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport api from \"../utils/Api.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport Register from \"./Register.js\";\nimport ProtectedRouteElement from \"./ProtectedRoute.js\";\nimport Login from \"./Login.js\";\nimport authenticationApi from \"../utils/AuthenticationApi.js\";\n\nexport function App() {\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  const [email, setEmail] = React.useState(\"\");\n\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n    setIsLoading(true); // Устанавливаем состояние загрузки в true перед отправкой запроса\n    Promise.all([api.getUserInfo(), api.getInitialCardsData()])\n      .then(([userData, cardsData]) => {\n        setCurrentUser(userData);\n        setCards(cardsData);\n        setIsLoading(false); // Устанавливаем состояние загрузки в false после получения данных\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsLoading(false); // Устанавливаем состояние загрузки в false в случае ошибки\n      });\n  }, []);\n\n  React.useEffect(() => {\n    const checkToken = async () => {\n      const jwt = localStorage.getItem(\"jwt\");\n\n      if (jwt) {\n        try {\n          const res = await AuthApi.checkToken(jwt);\n          setIsLoggedIn(true);\n          setEmail(res.data.email);\n          navigate(\"/\", { replace: true });\n        } catch (err) {\n          if (err.status === 401) {\n            console.log(\"401 — токен не передан\");\n          }\n          console.log(\"401 — токен некорректен\");\n        }\n      }\n    };\n\n    checkToken();\n  }, [navigate]);\n\n  function handleSignOut() {\n    localStorage.removeItem(\"jwt\");\n    setIsLoggedIn(false);\n    navigate(\"/sign-in\", { replace: true });\n  }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    if (isLiked) {\n      api\n        .removeLike(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((error) => {\n          // Обработка ошибки при удалении лайка\n          console.error(\"Error removing like:\", error);\n        });\n    } else {\n      api\n        .addLike(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((error) => {\n          // Обработка ошибки при добавлении лайка\n          console.error(\"Error adding like:\", error);\n        });\n    }\n  }\n\n  function handleCardDelete(card) {\n    api\n      .removeCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n      })\n      .catch((error) => {\n        console.log(\"Ошибка при удалении карточки:\", error);\n      });\n  }\n\n  function handleUpdateUser(userData) {\n    setIsLoading(true); // Устанавливаем состояние загрузки в true перед отправкой запроса\n    api\n      .editProfileInfo(userData)\n      .then((updatedUser) => {\n        setCurrentUser(updatedUser);\n        closeAllPopups();\n        setIsLoading(false); // Устанавливаем состояние загрузки в false после получения ответа\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsLoading(false); // Устанавливаем состояние загрузки в false в случае ошибки\n      });\n  }\n\n  function handleUpdateAvatar(newAvatar) {\n    setIsLoading(true); // Устанавливаем состояние загрузки в true перед отправкой запроса\n    api\n      .updateProfileUserAvatar(newAvatar)\n      .then((updatedUser) => {\n        setCurrentUser(updatedUser);\n        closeAllPopups();\n        setIsLoading(false); // Устанавливаем состояние загрузки в false после получения ответа\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsLoading(false); // Устанавливаем состояние загрузки в false в случае ошибки\n      });\n  }\n\n  function handleAddPlaceSubmit(newCard, setError) {\n    setIsLoading(true); // Set loading state to true before sending the request\n    api\n      .addNewCard(newCard)\n      .then((addedCard) => {\n        setCards([addedCard, ...cards]);\n        closeAllPopups();\n        setIsLoading(false); // Set loading state to false after receiving the response\n      })\n      .catch((error) => {\n        console.log(\"Error adding card:\", error);\n        setError(\"Имя карточки слишком длинное.\"); // Set the error message\n        setIsLoading(false); // Set loading state to false in case of an error\n      });\n  }\n\n  const handleEditAvatarClick = (event) => {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = (event) => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = (event) => {\n    setAddPlacePopupOpen(true);\n  };\n\n  const closeAllPopups = (event) => {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  };\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  };\n\n  useEffect(() => {\n    api\n      .getUserInfo()\n      .then((data) => {\n        setCurrentUser(data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    api\n      .getInitialCardsData()\n      .then((data) => {\n        setCards(data);\n      })\n      .catch((error) => {\n        console.log(\"Ошибка при загрузке карточек:\", error);\n      });\n  }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser || \"\"}>\n      <div className=\"page\">\n        <BrowserRouter>\n          <Header\n            email={email}\n            onSignOut={handleSignOut}\n            isLoggedIn={isLoggedIn}\n          />\n\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                isLoggedIn ? (\n                  <ProtectedRouteElement\n                    element={Main}\n                    isLoggedIn={isLoggedIn}\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    cards={cards}\n                    onCardClick={handleCardClick}\n                    CurrentUserContext={currentUser}\n                    handleCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                  />\n                ) : (\n                  <Navigate to=\"sign-in\" />\n                )\n              }\n            />\n\n            <Route path=\"/sign-up\" element={<Register />} />\n            <Route path=\"/sign-in\" element={<Login />} />\n          </Routes>\n        </BrowserRouter>\n        {isLoggedIn && <Footer />}\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          isLoading={isLoading}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          isLoading={isLoading}\n        ></AddPlacePopup>\n\n        <div className=\"popup popup_type_confirmation\">\n          <div className=\"popup__container\">\n            <button type=\"button\" className=\"popup__close\"></button>\n            <form className=\"popup__form\">\n              <h2 className=\"popup__title\">Вы уверены?</h2>\n              <button type=\"submit\" className=\"popup__submit\">\n                Да\n              </button>\n            </form>\n          </div>\n        </div>\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          isLoading={isLoading}\n        ></EditAvatarPopup>\n        {selectedCard && (\n          <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        )}\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}