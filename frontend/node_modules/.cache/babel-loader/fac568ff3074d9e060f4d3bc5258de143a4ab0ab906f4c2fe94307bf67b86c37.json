{"ast":null,"code":"import { authenticationElemenetsApi } from './constants';\nclass Api {\n  constructor(_ref) {\n    let {\n      headers,\n      URL\n    } = _ref;\n    this._headers = headers;\n    this._url = URL;\n  }\n  _handlePromiseRequest(res) {\n    if (res.ok) {\n      return res.json();\n    } else throw new Error('ошибка');\n  }\n  async register(email, password) {\n    try {\n      const response = await fetch(`${this._url}/signup`, {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n      const data = await this._handlePromiseRequest(response);\n      return data;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  async login(email, password) {\n    try {\n      console.log('1');\n      const response = await fetch(`${this._url}/signin`, {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n      console.log('2');\n      const data = await this._handlePromiseRequest(response);\n      console.log(data.token);\n      if (data) {\n        localStorage.setItem('jwt', data);\n        console.log('3');\n        return data;\n      }\n    } catch (error) {\n      console.log('4');\n      throw new Error(error);\n    }\n  }\n  getToken() {\n    return localStorage.getItem('jwt');\n  }\n  async checkToken() {\n    const token = this.getToken(); // Получаем токен из localStorage\n\n    try {\n      const response = await fetch(`${this._url}/users/me`, {\n        method: 'GET',\n        headers: {\n          ...this._headers,\n          Authorization: `Bearer ${token}` // Передаем токен в заголовке запроса\n        }\n      });\n\n      const data = await this._handlePromiseRequest(response);\n      return data;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\nconst authenticationApi = new Api(authenticationElemenetsApi);\nexport default authenticationApi;","map":{"version":3,"names":["authenticationElemenetsApi","Api","constructor","_ref","headers","URL","_headers","_url","_handlePromiseRequest","res","ok","json","Error","register","email","password","response","fetch","method","body","JSON","stringify","data","error","login","console","log","token","localStorage","setItem","getToken","getItem","checkToken","Authorization","authenticationApi"],"sources":["/Users/bogdanus/Desktop/dev/react-mesto-auth/src/utils/AuthenticationApi.js"],"sourcesContent":["import { authenticationElemenetsApi } from './constants';\n\nclass Api {\n  constructor({ headers, URL }) {\n    this._headers = headers;\n    this._url = URL;\n  }\n\n  _handlePromiseRequest(res) {\n    if (res.ok) {\n      return res.json();\n    } else throw new Error('ошибка');\n  }\n\n  async register(email, password) {\n    try {\n      const response = await fetch(`${this._url}/signup`, {\n        method: 'POST',\n        headers: this._headers,\n\n        body: JSON.stringify({\n          email: email,\n          password: password,\n        }),\n      });\n      const data = await this._handlePromiseRequest(response);\n      return data;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  async login(email, password) {\n    try {\n      console.log('1');\n      const response = await fetch(`${this._url}/signin`, {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({\n          email: email,\n          password: password,\n        }),\n      });\n      console.log('2');\n      const data = await this._handlePromiseRequest(response);\n      console.log(data.token);\n      if (data) {\n        localStorage.setItem('jwt', data);\n        console.log('3');\n        return data;\n      }\n    } catch (error) {\n      console.log('4');\n      throw new Error(error);\n    }\n  }\n\n  getToken() {\n    return localStorage.getItem('jwt');\n  }\n\n  async checkToken() {\n    const token = this.getToken(); // Получаем токен из localStorage\n\n    try {\n      const response = await fetch(`${this._url}/users/me`, {\n        method: 'GET',\n        headers: {\n          ...this._headers,\n          Authorization: `Bearer ${token}`, // Передаем токен в заголовке запроса\n        },\n      });\n      const data = await this._handlePromiseRequest(response);\n      return data;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\nconst authenticationApi = new Api(authenticationElemenetsApi);\nexport default authenticationApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}