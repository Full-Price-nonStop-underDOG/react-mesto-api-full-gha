{"ast":null,"code":"import { elementsApi } from \"./constants\";\nclass Api {\n  constructor(_ref) {\n    let {\n      headers,\n      URL\n    } = _ref;\n    this._headers = headers;\n    this._url = URL;\n  }\n  _handlePromiseRequest(res) {\n    if (res.ok) {\n      return res.json();\n    } else throw new Error(\"ошибка\");\n  }\n  async addLike(cardId) {\n    const response = await fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    });\n    return this._handlePromiseRequest(response);\n  }\n  async removeLike(cardId) {\n    const response = await fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    });\n    return this._handlePromiseRequest(response);\n  }\n  async getUserInfo() {\n    const reply = await fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    });\n    return this._handlePromiseRequest(reply);\n  }\n  async getInitialCardsData() {\n    const reply = await fetch(`${this._url}/cards`, {\n      headers: this._headers\n    });\n    return this._handlePromiseRequest(reply);\n  }\n  getInitialData() {\n    return Promise.all([this.getInitialCardsData(), this.getUserInfo()]);\n  }\n  async editProfileInfo(data) {\n    console.log(data);\n    const response = await fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n        avatar: data.avatar\n      })\n    });\n    return this._handlePromiseRequest(response);\n  }\n  async removeCard(cardId) {\n    const response = await fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    });\n    return this._handlePromiseRequest(response);\n  }\n  async addNewCard(data) {\n    const response = await fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    });\n    return this._handlePromiseRequest(response);\n  }\n  async getCard(cardId) {\n    const response = await fetch(`${this._url}/cards/${cardId}`, {\n      method: \"GET\",\n      headers: this._headers\n    });\n    return this._handlePromiseRequest(response);\n  }\n  async updateProfileUserAvatar(data) {\n    const response = await fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    });\n    return this._handlePromiseRequest(response);\n  }\n}\nconst api = new Api(elementsApi);\nexport default api;","map":{"version":3,"names":["elementsApi","Api","constructor","_ref","headers","URL","_headers","_url","_handlePromiseRequest","res","ok","json","Error","addLike","cardId","response","fetch","method","removeLike","getUserInfo","reply","getInitialCardsData","getInitialData","Promise","all","editProfileInfo","data","console","log","body","JSON","stringify","name","about","avatar","removeCard","addNewCard","link","getCard","updateProfileUserAvatar","api"],"sources":["/Users/bogdanus/mesto-react/src/utils/Api.js"],"sourcesContent":["import { elementsApi } from \"./constants\";\n\nclass Api {\n  constructor({ headers, URL }) {\n    this._headers = headers;\n    this._url = URL;\n  }\n\n  _handlePromiseRequest(res) {\n    if (res.ok) {\n      return res.json();\n    } else throw new Error(\"ошибка\");\n  }\n  async addLike(cardId) {\n    const response = await fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers,\n    });\n    return this._handlePromiseRequest(response);\n  }\n\n  async removeLike(cardId) {\n    const response = await fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    });\n\n    return this._handlePromiseRequest(response);\n  }\n\n  async getUserInfo() {\n    const reply = await fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: this._headers,\n    });\n    return this._handlePromiseRequest(reply);\n  }\n\n  async getInitialCardsData() {\n    const reply = await fetch(`${this._url}/cards`, {\n      headers: this._headers,\n    });\n    return this._handlePromiseRequest(reply);\n  }\n\n  getInitialData() {\n    return Promise.all([this.getInitialCardsData(), this.getUserInfo()]);\n  }\n\n  async editProfileInfo(data) {\n    console.log(data);\n    const response = await fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n        avatar: data.avatar,\n      }),\n    });\n\n    return this._handlePromiseRequest(response);\n  }\n\n  async removeCard(cardId) {\n    const response = await fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    });\n    return this._handlePromiseRequest(response);\n  }\n\n  async addNewCard(data) {\n    const response = await fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    });\n    return this._handlePromiseRequest(response);\n  }\n\n  async getCard(cardId) {\n    const response = await fetch(`${this._url}/cards/${cardId}`, {\n      method: \"GET\",\n      headers: this._headers,\n    });\n    return this._handlePromiseRequest(response);\n  }\n\n  async updateProfileUserAvatar(data) {\n    const response = await fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    });\n    return this._handlePromiseRequest(response);\n  }\n}\nconst api = new Api(elementsApi);\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}