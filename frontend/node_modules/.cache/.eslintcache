[{"/Users/bogdanus/mesto-react/src/index.js":"1","/Users/bogdanus/mesto-react/src/reportWebVitals.js":"2","/Users/bogdanus/mesto-react/src/components/App.js":"3","/Users/bogdanus/mesto-react/src/components/Header.js":"4","/Users/bogdanus/mesto-react/src/components/Main.js":"5","/Users/bogdanus/mesto-react/src/components/Footer.js":"6","/Users/bogdanus/mesto-react/src/components/PopupWithForm.js":"7","/Users/bogdanus/mesto-react/src/utils/Api.js":"8","/Users/bogdanus/mesto-react/src/utils/constants.js":"9","/Users/bogdanus/mesto-react/src/components/Card.js":"10","/Users/bogdanus/mesto-react/src/components/ImagePopup.js":"11","/Users/bogdanus/mesto-react/src/contexts/CurrentUserContext.js":"12","/Users/bogdanus/mesto-react/src/components/EditProfilePopup.js":"13","/Users/bogdanus/mesto-react/src/components/EditAvatarPopup.js":"14","/Users/bogdanus/mesto-react/src/components/AddPlacePopup.js":"15","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/index.js":"16","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/reportWebVitals.js":"17","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/App.js":"18","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/EditProfilePopup.js":"19","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/AddPlacePopup.js":"20","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/ImagePopup.js":"21","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/EditAvatarPopup.js":"22","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/Main.js":"23","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/Footer.js":"24","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/PopupWithForm.js":"25","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/Header.js":"26","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/contexts/CurrentUserContext.js":"27","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/utils/Api.js":"28","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/Card.js":"29","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/utils/constants.js":"30","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/Register.js":"31","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/AuthenticationForm.js":"32","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/ProtectedRoute.js":"33","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/Login.js":"34","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/utils/AuthenticationApi.js":"35","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/InfoTooltip.js":"36"},{"size":549,"mtime":1684661667163,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1684594912504,"results":"39","hashOfConfig":"38"},{"size":7734,"mtime":1686394636197,"results":"40","hashOfConfig":"38"},{"size":331,"mtime":1684861827396,"results":"41","hashOfConfig":"38"},{"size":1942,"mtime":1686231096458,"results":"42","hashOfConfig":"38"},{"size":197,"mtime":1684662492397,"results":"43","hashOfConfig":"38"},{"size":1385,"mtime":1686393064481,"results":"44","hashOfConfig":"38"},{"size":2567,"mtime":1686234368610,"results":"45","hashOfConfig":"38"},{"size":1331,"mtime":1684745652899,"results":"46","hashOfConfig":"38"},{"size":1505,"mtime":1686221689216,"results":"47","hashOfConfig":"38"},{"size":694,"mtime":1684837891945,"results":"48","hashOfConfig":"38"},{"size":118,"mtime":1685531193714,"results":"49","hashOfConfig":"38"},{"size":2045,"mtime":1686304540789,"results":"50","hashOfConfig":"38"},{"size":1290,"mtime":1686304681382,"results":"51","hashOfConfig":"38"},{"size":2596,"mtime":1686670891208,"results":"52","hashOfConfig":"38"},{"size":549,"mtime":1688059387531,"results":"53","hashOfConfig":"54"},{"size":362,"mtime":1686820012045,"results":"55","hashOfConfig":"54"},{"size":12638,"mtime":1692920080674,"results":"56","hashOfConfig":"54"},{"size":2045,"mtime":1686820012033,"results":"57","hashOfConfig":"54"},{"size":2596,"mtime":1686820012032,"results":"58","hashOfConfig":"54"},{"size":694,"mtime":1686820012034,"results":"59","hashOfConfig":"54"},{"size":1290,"mtime":1686820012033,"results":"60","hashOfConfig":"54"},{"size":1942,"mtime":1686820012035,"results":"61","hashOfConfig":"54"},{"size":197,"mtime":1686820012034,"results":"62","hashOfConfig":"54"},{"size":1385,"mtime":1686820012035,"results":"63","hashOfConfig":"54"},{"size":1163,"mtime":1688073028010,"results":"64","hashOfConfig":"54"},{"size":118,"mtime":1686820012037,"results":"65","hashOfConfig":"54"},{"size":2567,"mtime":1686820012046,"results":"66","hashOfConfig":"54"},{"size":1505,"mtime":1686820012032,"results":"67","hashOfConfig":"54"},{"size":1490,"mtime":1693064048625,"results":"68","hashOfConfig":"54"},{"size":1137,"mtime":1688138938463,"results":"69","hashOfConfig":"54"},{"size":1914,"mtime":1688198148149,"results":"70","hashOfConfig":"54"},{"size":615,"mtime":1688064686134,"results":"71","hashOfConfig":"54"},{"size":564,"mtime":1687693768947,"results":"72","hashOfConfig":"54"},{"size":1887,"mtime":1693064212079,"results":"73","hashOfConfig":"54"},{"size":1377,"mtime":1687875677535,"results":"74","hashOfConfig":"54"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e8lqbj",{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"eucupq",{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"126"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"126"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"126"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"126"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"126"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"126"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"/Users/bogdanus/mesto-react/src/index.js",[],[],"/Users/bogdanus/mesto-react/src/reportWebVitals.js",[],[],"/Users/bogdanus/mesto-react/src/components/App.js",["194","195"],[],"import React, { useState, useEffect, useContext } from \"react\";\nimport Header from \"../components/Header.js\";\nimport Main from \"../components/Main.js\";\nimport Footer from \"../components/Footer.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport api from \"../utils/Api.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\n\nexport function App() {\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n    setIsLoading(true); // Устанавливаем состояние загрузки в true перед отправкой запроса\n    Promise.all([api.getUserInfo(), api.getInitialCardsData()])\n      .then(([userData, cardsData]) => {\n        setCurrentUser(userData);\n        setCards(cardsData);\n        setIsLoading(false); // Устанавливаем состояние загрузки в false после получения данных\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsLoading(false); // Устанавливаем состояние загрузки в false в случае ошибки\n      });\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    if (isLiked) {\n      api\n        .removeLike(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((error) => {\n          // Обработка ошибки при удалении лайка\n          console.error(\"Error removing like:\", error);\n        });\n    } else {\n      api\n        .addLike(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((error) => {\n          // Обработка ошибки при добавлении лайка\n          console.error(\"Error adding like:\", error);\n        });\n    }\n  }\n\n  function handleCardDelete(card) {\n    api\n      .removeCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n      })\n      .catch((error) => {\n        console.log(\"Ошибка при удалении карточки:\", error);\n      });\n  }\n\n  function handleUpdateUser(userData) {\n    setIsLoading(true); // Устанавливаем состояние загрузки в true перед отправкой запроса\n    api\n      .editProfileInfo(userData)\n      .then((updatedUser) => {\n        setCurrentUser(updatedUser);\n        closeAllPopups();\n        setIsLoading(false); // Устанавливаем состояние загрузки в false после получения ответа\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsLoading(false); // Устанавливаем состояние загрузки в false в случае ошибки\n      });\n  }\n\n  function handleUpdateAvatar(newAvatar) {\n    setIsLoading(true); // Устанавливаем состояние загрузки в true перед отправкой запроса\n    api\n      .updateProfileUserAvatar(newAvatar)\n      .then((updatedUser) => {\n        setCurrentUser(updatedUser);\n        closeAllPopups();\n        setIsLoading(false); // Устанавливаем состояние загрузки в false после получения ответа\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsLoading(false); // Устанавливаем состояние загрузки в false в случае ошибки\n      });\n  }\n\n  function handleAddPlaceSubmit(newCard, setError) {\n    setIsLoading(true); // Set loading state to true before sending the request\n    api\n      .addNewCard(newCard)\n      .then((addedCard) => {\n        setCards([addedCard, ...cards]);\n        closeAllPopups();\n        setIsLoading(false); // Set loading state to false after receiving the response\n      })\n      .catch((error) => {\n        console.log(\"Error adding card:\", error);\n        setError(\"Имя карточки слишком длинное.\"); // Set the error message\n        setIsLoading(false); // Set loading state to false in case of an error\n      });\n  }\n\n  const handleEditAvatarClick = (event) => {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = (event) => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = (event) => {\n    setAddPlacePopupOpen(true);\n  };\n\n  const closeAllPopups = (event) => {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  };\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  };\n\n  useEffect(() => {\n    api\n      .getUserInfo()\n      .then((data) => {\n        setCurrentUser(data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    api\n      .getInitialCardsData()\n      .then((data) => {\n        setCards(data);\n      })\n      .catch((error) => {\n        console.log(\"Ошибка при загрузке карточек:\", error);\n      });\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser || \"\"}>\n        <Header />\n        <Main\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          cards={cards}\n          onCardClick={handleCardClick}\n          CurrentUserContext={currentUser}\n          handleCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n        <Footer />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          isLoading={isLoading}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          isLoading={isLoading}\n        ></AddPlacePopup>\n        <div className=\"popup popup_type_confirmation\">\n          <div className=\"popup__container\">\n            <button type=\"button\" className=\"popup__close\"></button>\n            <form className=\"popup__form\">\n              <h2 className=\"popup__title\">Вы уверены?</h2>\n              <button type=\"submit\" className=\"popup__submit\">\n                Да\n              </button>\n            </form>\n          </div>\n        </div>\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          isLoading={isLoading}\n        ></EditAvatarPopup>\n        {selectedCard && (\n          <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        )}\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n",[],"/Users/bogdanus/mesto-react/src/components/Header.js",[],[],"/Users/bogdanus/mesto-react/src/components/Main.js",["196","197"],[],"/Users/bogdanus/mesto-react/src/components/Footer.js",[],[],"/Users/bogdanus/mesto-react/src/components/PopupWithForm.js",["198","199"],[],"/Users/bogdanus/mesto-react/src/utils/Api.js",[],[],"/Users/bogdanus/mesto-react/src/utils/constants.js",[],[],[],"/Users/bogdanus/mesto-react/src/components/Card.js",[],[],"/Users/bogdanus/mesto-react/src/components/ImagePopup.js",[],[],"/Users/bogdanus/mesto-react/src/contexts/CurrentUserContext.js",[],[],"/Users/bogdanus/mesto-react/src/components/EditProfilePopup.js",["200"],[],"/Users/bogdanus/mesto-react/src/components/EditAvatarPopup.js",[],[],"/Users/bogdanus/mesto-react/src/components/AddPlacePopup.js",[],[],"/Users/bogdanus/Desktop/dev/react-mesto-auth/src/index.js",[],[],[],"/Users/bogdanus/Desktop/dev/react-mesto-auth/src/reportWebVitals.js",[],[],"/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/App.js",["201","202","203","204","205"],[],"import React, { useState, useEffect, useContext } from 'react';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  navigate,\n  Navigate,\n  useNavigate,\n  redirect,\n} from 'react-router-dom';\nimport Header from '../components/Header.js';\nimport Main from '../components/Main.js';\nimport Footer from '../components/Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport api from '../utils/Api.js';\nimport ImagePopup from './ImagePopup.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport Register from './Register.js';\nimport ProtectedRouteElement from './ProtectedRoute.js';\nimport Login from './Login.js';\nimport authenticationApi from '../utils/AuthenticationApi.js';\nimport InfoToolTip from './InfoTooltip.js';\n\n// app.js — входной файл\n\nexport function App() {\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(null);\n  const [email, setEmail] = React.useState('');\n  const [isRegistrationSuccessful, setRegistrationSuccessful] = useState(false);\n\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  const [currentUser, setCurrentUser] = useState({});\n  const [isLuck, setIsLuck] = React.useState(false);\n  const [isInfoToolTipPopupOpen, setInfoToolTipPopupOpen] =\n    React.useState(false);\n\n  useEffect(() => {\n    console.log(isLoggedIn, 'isloggedIn');\n  }, [isLoggedIn]);\n\n  // const requestTokenHandler = async () => {\n  //   try {\n  //     const email = \"korv.korp@yandex.ru\";\n  //     const password = \"123456\";\n\n  //     const response = await authenticationApi.login(email, password);\n  //     const token = response.token;\n\n  //     console.log(\"Токен получен:\", token);\n  //     return token;\n  //   } catch (error) {\n  //     console.log(\"Ошибка при получении токена:\", error);\n  //   }\n  // };\n\n  // const checkTokenHandler = async () => {\n  //   try {\n  //     const token = await requestTokenHandler(); // Вызываем обработчик для запроса токена\n  //     const data = await authenticationApi.checkToken(token);\n\n  //     console.log(\"Результат проверки токена:\", data);\n  //   } catch (error) {\n  //     console.log(\"Ошибка при проверке токена:\", error);\n  //   }\n  // };\n\n  // checkTokenHandler();\n\n  useEffect(() => {\n    setIsLoading(true); // Устанавливаем состояние загрузки в true перед отправкой запроса\n    Promise.all([api.getUserInfo(), api.getInitialCardsData()])\n      .then(([userData, cardsData]) => {\n        setCurrentUser(userData);\n        setCards(cardsData);\n        setIsLoading(false); // Устанавливаем состояние загрузки в false после получения данных\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsLoading(false); // Устанавливаем состояние загрузки в false в случае ошибки\n      });\n  }, []);\n\n  React.useEffect(() => {\n    const checkTokens = async () => {\n      const jwt = localStorage.getItem('jwt');\n      console.log(jwt, 'монтирование');\n      if (jwt) {\n        try {\n          const res = await authenticationApi.checkToken(jwt);\n          setIsLoggedIn(true);\n          setEmail(res.data.email);\n          redirect('/');\n          console.log('success');\n        } catch (err) {\n          if (err.status === 401) {\n            console.log('401 — токен не передан');\n          }\n          console.log('401 — токен некорректен', jwt, err);\n        }\n      }\n    };\n\n    checkTokens();\n  }, []);\n\n  function handleSignOut() {\n    localStorage.removeItem('jwt');\n    setIsLoggedIn(false);\n    redirect('/sign-in', { replace: true });\n  }\n\n  async function loginSubmit(email, password) {\n    try {\n      const res = await authenticationApi.login(email, password);\n      localStorage.setItem('jwt', res.token);\n      setIsLoggedIn(true);\n      console.log(res.token);\n      setEmail(email);\n      redirect('/', { replace: true });\n    } catch (err) {\n      if (err.status === 400) {\n        console.log('400 - не передано одно из полей');\n      } else if (err.status === 401) {\n        console.log('401 - пользователя с данным email не сущетсвует');\n      }\n    }\n  }\n\n  async function registerSubmit(email, password) {\n    try {\n      await authenticationApi.register(email, password);\n\n      setIsLuck(true);\n\n      setRegistrationSuccessful(true);\n      //console.log(isRegistrationSuccessful);\n      redirect('/sign-in', { replace: true });\n      setInfoToolTipPopupOpen(true);\n    } catch (err) {\n      if (err.status === 400) {\n        console.log('400 - поле заполненно некорректно');\n      }\n      setInfoToolTipPopupOpen(true);\n      setIsLuck(false);\n      setRegistrationSuccessful(false);\n      console.log(isRegistrationSuccessful);\n    }\n  }\n\n  // useEffect(() => {\n  //   if (isRegistrationSuccessful) {\n  //     console.log(\"xxxx\");\n  //     redirect(\"/sign-in\", { replace: true });\n  //   } else {\n  //     console.log(\"fuck this I am an idiot\");\n  //   }\n  // }, [isRegistrationSuccessful]);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    if (isLiked) {\n      api\n        .removeLike(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((error) => {\n          // Обработка ошибки при удалении лайка\n          console.error('Error removing like:', error);\n        });\n    } else {\n      api\n        .addLike(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((error) => {\n          // Обработка ошибки при добавлении лайка\n          console.error('Error adding like:', error);\n        });\n    }\n  }\n\n  function handleCardDelete(card) {\n    api\n      .removeCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n      })\n      .catch((error) => {\n        console.log('Ошибка при удалении карточки:', error);\n      });\n  }\n\n  function handleUpdateUser(userData) {\n    setIsLoading(true); // Устанавливаем состояние загрузки в true перед отправкой запроса\n    api\n      .editProfileInfo(userData)\n      .then((updatedUser) => {\n        setCurrentUser(updatedUser);\n        closeAllPopups();\n        setIsLoading(false); // Устанавливаем состояние загрузки в false после получения ответа\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsLoading(false); // Устанавливаем состояние загрузки в false в случае ошибки\n      });\n  }\n\n  function handleUpdateAvatar(newAvatar) {\n    setIsLoading(true); // Устанавливаем состояние загрузки в true перед отправкой запроса\n    api\n      .updateProfileUserAvatar(newAvatar)\n      .then((updatedUser) => {\n        setCurrentUser(updatedUser);\n        closeAllPopups();\n        setIsLoading(false); // Устанавливаем состояние загрузки в false после получения ответа\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsLoading(false); // Устанавливаем состояние загрузки в false в случае ошибки\n      });\n  }\n\n  function handleAddPlaceSubmit(newCard, setError) {\n    setIsLoading(true); // Set loading state to true before sending the request\n    api\n      .addNewCard(newCard)\n      .then((addedCard) => {\n        setCards([addedCard, ...cards]);\n        closeAllPopups();\n        setIsLoading(false); // Set loading state to false after receiving the response\n      })\n      .catch((error) => {\n        console.log('Error adding card:', error);\n        setError('Имя карточки слишком длинное.'); // Set the error message\n        setIsLoading(false); // Set loading state to false in case of an error\n      });\n  }\n\n  const handleEditAvatarClick = (event) => {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = (event) => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = (event) => {\n    setAddPlacePopupOpen(true);\n  };\n\n  const closeAllPopups = (event) => {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setInfoToolTipPopupOpen(false);\n    setSelectedCard(null);\n  };\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  };\n\n  // useEffect(() => {\n  //   api\n  //     .getUserInfo()\n  //     .then((data) => {\n  //       setCurrentUser(data);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser || ''}>\n      <div className='page'>\n        <BrowserRouter>\n          <Header\n            email={email}\n            onSignOut={handleSignOut}\n            isLoggedIn={isLoggedIn}\n          />\n\n          <Routes>\n            <Route\n              path='/'\n              element={\n                <ProtectedRouteElement\n                  element={Main}\n                  isLoggedIn={isLoggedIn}\n                  onEditAvatar={handleEditAvatarClick}\n                  onEditProfile={handleEditProfileClick}\n                  onAddPlace={handleAddPlaceClick}\n                  cards={cards}\n                  onCardClick={handleCardClick}\n                  CurrentUserContext={currentUser}\n                  handleCardLike={handleCardLike}\n                  onCardDelete={handleCardDelete}\n                />\n              }\n            />\n\n            <Route\n              path='/sign-up'\n              element={\n                <Register\n                  onRegistration={registerSubmit}\n                  isRegistrationSuccessful={isRegistrationSuccessful}\n                  redirect={redirect}\n                  replace\n                />\n              }\n            />\n            <Route\n              path='/sign-in'\n              element={<Login onLogin={loginSubmit} replace />}\n            />\n          </Routes>\n        </BrowserRouter>\n        {isLoggedIn && <Footer />}\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          isLoading={isLoading}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          isLoading={isLoading}\n        ></AddPlacePopup>\n\n        <div className='popup popup_type_confirmation'>\n          <div className='popup__container'>\n            <button type='button' className='popup__close'></button>\n            <form className='popup__form'>\n              <h2 className='popup__title'>Вы уверены?</h2>\n              <button type='submit' className='popup__submit'>\n                Да\n              </button>\n            </form>\n          </div>\n        </div>\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          isLoading={isLoading}\n        ></EditAvatarPopup>\n        {selectedCard && (\n          <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        )}\n        <InfoToolTip\n          isLuck={isLuck}\n          isOpen={isInfoToolTipPopupOpen}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/EditProfilePopup.js",["206"],[],"import React, { useState, useContext, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup(props) {\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleDescriptionChange(event) {\n    setDescription(event.target.value);\n  }\n\n  function handleNameChange(event) {\n    setName(event.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      title=\"Редактировать профиль\"\n      name=\"edit-profile\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      textButton={props.isLoading ? \"Сохранение...\" : \"Сохранить\"}\n    >\n      <input\n        placeholder=\"Имя\"\n        minLength=\"2\"\n        maxLength=\"40\"\n        className=\"form__field form__text form__field_text_name\"\n        id=\"name-input\"\n        name=\"name\"\n        value={name || \"\"}\n        onChange={handleNameChange}\n        required\n      />\n      <span className=\"form__field-error name-input-error\">\n        Текст должен быть не короче 2 симв. Длина текста сейчас: 1 символ.\n      </span>\n      <input\n        placeholder=\"О себе\"\n        minLength=\"4\"\n        maxLength=\"200\"\n        required\n        className=\"form__field form__text form__field_text_job\"\n        id=\"job-input\"\n        value={description || \"\"}\n        name=\"about\"\n        onChange={handleDescriptionChange}\n      />\n      <span className=\"form__field-error form__field-error job-input-error\">\n        Расскажите о себе\n      </span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/AddPlacePopup.js",[],[],"/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/ImagePopup.js",[],[],"/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/EditAvatarPopup.js",[],[],"/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/Main.js",["207","208"],[],"import React, { useEffect, useState } from \"react\";\nimport pencillImg from \"../images/pencill.svg\";\nimport Card from \"./Card\";\n\nfunction Main({\n  onEditAvatar,\n  onEditProfile,\n  onAddPlace,\n  cards,\n  onCardClick,\n  CurrentUserContext,\n  handleCardLike,\n  onCardDelete,\n}) {\n  return (\n    <main className=\"main\">\n      <section className=\"profile\">\n        <div\n          className=\"profile__avatar\"\n          style={{\n            backgroundImage: `url(${CurrentUserContext.avatar})`,\n          }}\n          alt=\"аватар\"\n        />\n        <button\n          className=\"profile__edit-avatar\"\n          type=\"button\"\n          onClick={onEditAvatar}\n        >\n          <img\n            className=\"profile__pencil\"\n            src={pencillImg}\n            require=\"true\"\n            alt=\"Карандаш\"\n          />\n        </button>\n        <div className=\"profile__info\">\n          <div className=\"profile__info-description\">\n            <h1 className=\"profile__name\">{CurrentUserContext.name}</h1>\n            <p className=\"profile__job\">{CurrentUserContext.about}</p>\n          </div>\n          <button\n            className=\"profile__button-edit\"\n            type=\"button\"\n            aria-label=\"Редактировать\"\n            onClick={onEditProfile}\n          ></button>\n        </div>\n        <button\n          className=\"profile__button-add\"\n          type=\"button\"\n          aria-label=\"Добавить\"\n          onClick={onAddPlace}\n        ></button>\n      </section>\n      <section className=\"mesta\">\n        {cards.length > 0 ? (\n          cards.map((card) => (\n            <Card\n              card={card}\n              onCardClick={onCardClick}\n              onCardLike={handleCardLike}\n              onCardDelete={onCardDelete}\n              key={card?._id}\n            />\n          ))\n        ) : (\n          <p>No cards to display</p>\n        )}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/Footer.js",[],[],"/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/PopupWithForm.js",["209","210"],[],"import React, { useState } from \"react\";\n\nfunction PopupWithForm(props) {\n  const [isError, setIsError] = useState(false);\n  const [isClosing, setIsClosing] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onSubmit(e);\n  }\n\n  const handleClose = () => {\n    setIsClosing(true);\n    setTimeout(() => {\n      props.onClose();\n      setIsClosing(false);\n    }, 300);\n  };\n\n  return (\n    <div\n      className={`popup popup_type_${props.name} ${\n        props.isOpen ? \"popup_open\" : \"\"\n      } ${isClosing ? \"closing\" : \"\"}`}\n    >\n      <div className=\"popup__container\">\n        <form\n          className=\"popup__form\"\n          name={props.name}\n          noValidate\n          onSubmit={handleSubmit}\n        >\n          <h2 className=\"form__title\">{props.title}</h2>\n          {props.children}\n          <button\n            className=\"form__button\"\n            type=\"submit\"\n            aria-label=\"Сохранить\"\n            disabled={props.isLoading}\n          >\n            {props.textButton ||\n              (props.isLoading ? \"Сохранение...\" : \"Сохранить\")}\n          </button>\n        </form>\n        <button\n          className=\"popup__close\"\n          type=\"button\"\n          aria-label=\"Закрыть\"\n          onClick={handleClose}\n        ></button>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/Header.js",["211"],[],"import React from \"react\";\nimport logImg from \"../images/Vector.svg\";\nimport { useLocation, Link, useNavigate } from \"react-router-dom\";\n\nfunction Header(props) {\n  const way = useLocation();\n\n  const handleSignOut = () => {\n    props.onSignOut();\n    // Перенаправление на страницу входа после выхода\n  };\n  return (\n    <header className=\"header header_opacity\">\n      <img\n        className=\"header__logo\"\n        src={logImg}\n        require=\"true\"\n        alt=\"логотип-место\"\n      />\n\n      {way.pathname === \"/sign-in\" && (\n        <Link to=\"/sign-up\" className=\"header-text\">\n          Регистрация\n        </Link>\n      )}\n      {way.pathname === \"/sign-up\" && (\n        <Link to=\"/sign-in\" className=\"header-text\">\n          Войти\n        </Link>\n      )}\n      {way.pathname === \"/\" && (\n        <div className=\"header__info\">\n          <p className=\"header-email header-text\">{props.email}</p>\n          <Link to=\"/sign-in\" className=\"header-text\" onClick={handleSignOut}>\n            Выйти\n          </Link>\n        </div>\n      )}\n    </header>\n  );\n}\n\nexport default Header;\n","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/contexts/CurrentUserContext.js",[],[],"/Users/bogdanus/Desktop/dev/react-mesto-auth/src/utils/Api.js",[],[],"/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/Card.js",[],[],"/Users/bogdanus/Desktop/dev/react-mesto-auth/src/utils/constants.js",[],[],"/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/Register.js",["212","213","214"],[],"import React, { useState, useEffect, useRef } from \"react\";\nimport AuthenticationForm from \"./AuthenticationForm\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Register(props) {\n  const navigate = useNavigate();\n  function handleSubmit(email, password) {\n    props.onRegistration(email, password);\n  }\n\n  useEffect(() => {\n    if (props.isRegistrationSuccessful) {\n      console.log(\"xxxx\");\n      navigate(\"/sign-in\", { replace: true });\n    } else {\n      console.log(\"fuck this I am an idiot\");\n    }\n  }, [props.isRegistrationSuccessful]);\n\n  // async function handleSubmit(email, password) {\n  //   try {\n  //     await props.onRegistration(email, password);\n\n  //     if (props.isRegistrationSuccessful) {\n  //       console.log(props.isRegistrationSuccessful, \"ватафак\");\n  //       navigate(\"/sign-in\");\n  //     }\n  //   } catch (error) {\n  //     console.log(props.isRegistrationSuccessful);\n  //   }\n  // }\n\n  return (\n    <AuthenticationForm\n      title=\"Регистрация\"\n      buttonText=\"Зарегистрироваться\"\n      onSubmit={handleSubmit}\n    />\n  );\n}\n\nexport default Register;\n","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/AuthenticationForm.js",[],[],"/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/ProtectedRoute.js",[],[],"/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/Login.js",["215","216","217"],[],"import React, { useState, useEffect, useRef } from \"react\";\nimport AuthenticationForm from \"./AuthenticationForm\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Login(props) {\n  const navigate = useNavigate();\n\n  async function handleSubmit(email, password) {\n    await props.onLogin(email, password);\n    navigate(\"/\"); // Перенаправление на главную страницу\n  }\n\n  return (\n    <AuthenticationForm\n      title=\"Вход\"\n      buttonText=\"Войти\"\n      onSubmit={handleSubmit}\n    />\n  );\n}\n\nexport default Login;\n","/Users/bogdanus/Desktop/dev/react-mesto-auth/src/utils/AuthenticationApi.js",[],[],"/Users/bogdanus/Desktop/dev/react-mesto-auth/src/components/InfoTooltip.js",[],[],{"ruleId":"218","severity":1,"message":"219","line":1,"column":38,"nodeType":"220","messageId":"221","endLine":1,"endColumn":48},{"ruleId":"218","severity":1,"message":"222","line":5,"column":8,"nodeType":"220","messageId":"221","endLine":5,"endColumn":21},{"ruleId":"218","severity":1,"message":"223","line":1,"column":17,"nodeType":"220","messageId":"221","endLine":1,"endColumn":26},{"ruleId":"218","severity":1,"message":"224","line":1,"column":28,"nodeType":"220","messageId":"221","endLine":1,"endColumn":36},{"ruleId":"218","severity":1,"message":"225","line":4,"column":10,"nodeType":"220","messageId":"221","endLine":4,"endColumn":17},{"ruleId":"218","severity":1,"message":"226","line":4,"column":19,"nodeType":"220","messageId":"221","endLine":4,"endColumn":29},{"ruleId":"218","severity":1,"message":"223","line":1,"column":39,"nodeType":"220","messageId":"221","endLine":1,"endColumn":48},{"ruleId":"218","severity":1,"message":"219","line":1,"column":38,"nodeType":"220","messageId":"221","endLine":1,"endColumn":48},{"ruleId":"218","severity":1,"message":"227","line":6,"column":3,"nodeType":"220","messageId":"221","endLine":6,"endColumn":11},{"ruleId":"218","severity":1,"message":"228","line":7,"column":3,"nodeType":"220","messageId":"221","endLine":7,"endColumn":11},{"ruleId":"218","severity":1,"message":"229","line":8,"column":3,"nodeType":"220","messageId":"221","endLine":8,"endColumn":14},{"ruleId":"218","severity":1,"message":"222","line":14,"column":8,"nodeType":"220","messageId":"221","endLine":14,"endColumn":21},{"ruleId":"218","severity":1,"message":"223","line":1,"column":39,"nodeType":"220","messageId":"221","endLine":1,"endColumn":48},{"ruleId":"218","severity":1,"message":"223","line":1,"column":17,"nodeType":"220","messageId":"221","endLine":1,"endColumn":26},{"ruleId":"218","severity":1,"message":"224","line":1,"column":28,"nodeType":"220","messageId":"221","endLine":1,"endColumn":36},{"ruleId":"218","severity":1,"message":"225","line":4,"column":10,"nodeType":"220","messageId":"221","endLine":4,"endColumn":17},{"ruleId":"218","severity":1,"message":"226","line":4,"column":19,"nodeType":"220","messageId":"221","endLine":4,"endColumn":29},{"ruleId":"218","severity":1,"message":"229","line":3,"column":29,"nodeType":"220","messageId":"221","endLine":3,"endColumn":40},{"ruleId":"218","severity":1,"message":"224","line":1,"column":17,"nodeType":"220","messageId":"221","endLine":1,"endColumn":25},{"ruleId":"218","severity":1,"message":"230","line":1,"column":38,"nodeType":"220","messageId":"221","endLine":1,"endColumn":44},{"ruleId":"231","severity":1,"message":"232","line":18,"column":6,"nodeType":"233","endLine":18,"endColumn":38,"suggestions":"234"},{"ruleId":"218","severity":1,"message":"224","line":1,"column":17,"nodeType":"220","messageId":"221","endLine":1,"endColumn":25},{"ruleId":"218","severity":1,"message":"223","line":1,"column":27,"nodeType":"220","messageId":"221","endLine":1,"endColumn":36},{"ruleId":"218","severity":1,"message":"230","line":1,"column":38,"nodeType":"220","messageId":"221","endLine":1,"endColumn":44},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'PopupWithForm' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'isError' is assigned a value but never used.","'setIsError' is assigned a value but never used.","'navigate' is defined but never used.","'Navigate' is defined but never used.","'useNavigate' is defined but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["235"],{"desc":"236","fix":"237"},"Update the dependencies array to be: [navigate, props.isRegistrationSuccessful]",{"range":"238","text":"239"},[522,554],"[navigate, props.isRegistrationSuccessful]"]